// Generated by CoffeeScript 1.3.3

/*
# queryhistory.coffee
# query history related stuff
#
# @author dpausp (Tobias Stenzel)
*/


/*-- private module vars --
*/


(function() {
  var MODULE_NAME, asInitVals, del_queries, insert_query, logg, run_query, setup_datatable, that, toggle_all_checkboxes, toggle_favorite_queries;

  MODULE_NAME = "yamoda.queryhistory";

  logg = void 0;

  asInitVals = [];

  that = void 0;

  /*-- module functions --
  */


  setup_datatable = function() {
    var dtable, query_links, table;
    table = $("#query_history_table");
    if (table.hasClass("initialized")) {
      logg.info("table already initialized, doing nothing");
      return;
    }
    logg.debug("activating dataTable for query_history_table");
    dtable = table.addClass("initialized").dataTable({
      bStateSave: true,
      sPaginationType: "full_numbers",
      oLanguage: {
        sSearch: "Search all columns: "
      },
      aoColumnDefs: [
        {
          asSorting: [],
          aTargets: [5, 6]
        }
      ]
    });
    $("tfoot input").keyup(function(i) {
      logg.debug("input keyup");
      dtable.fnFilter(this.value, $("tfoot input").index(this));
    });
    $("tfoot input").each(function(i) {
      asInitVals[i] = this.value;
    });
    $("tfoot input").focus(function(i) {
      var t$;
      logg.debug("input focus");
      t$ = $(this);
      if (t$.hasClass("search_init")) {
        t$.removeClass("search_init");
        this.value = "";
      }
    });
    $("tfoot input").blur(function(i) {
      var t$;
      logg.debug("input blur");
      if (this.value === "") {
        t$ = $(this);
        t$.addClass("search_init");
        this.value = asInitVals[$("tfoot input").index(this)];
      }
    });
    query_links = $(".query_popover");
    query_links.each(function(index, link) {
      var text;
      text = link.text.replace(/,/g, "<br>");
      return $("#query_" + index).popover({
        content: text,
        title: "Query #" + (index + 1) + " (click to run)",
        html: true,
        trigger: "hover",
        placement: "top"
      });
    });
    logg.info("colResizable");
    dtable.colResizable();
  };

  insert_query = function(row) {
    var query_name, query_string;
    query_string = $("#query_" + row).text().replace(/,/g, "\n");
    query_name = $("#query_name_" + row).text();
    $("#query_input").val(query_string);
    $("#query_name_input").val(query_name);
    $("#favorite_checkbox").removeAttr("checked");
  };

  run_query = function(row) {
    logg.debug("called run_query");
    that.insert_query(row);
    $(".popover").remove();
    $("#save_query_checkbox").removeAttr("checked");
    yamoda.search.send_query_request(false);
  };

  toggle_all_checkboxes = function(master_checkbox, slave_checkboxes$) {
    logg.debug("called toggle_all_checkboxes");
    if (master_checkbox.checked) {
      slave_checkboxes$.attr("checked", "checked");
    } else {
      slave_checkboxes$.removeAttr("checked");
    }
  };

  del_queries = function() {
    var ids;
    logg.info("called del_queries");
    ids = $.map($(".querycheck:checked"), function(el) {
      return el.id.substring(6);
    });
    logg.info("ids to delete: ", ids);
    if (!(ids != null)) {
      return;
    }
    $("actionbutton button").button("loading");
    logg.info("sending request to", that.del_queries_url);
    $.ajax({
      type: "POST",
      url: that.del_queries_url,
      data: {
        ids: ids
      },
      success: function(data, st, xhr) {
        window.location.reload();
        return $("checkbox_all").removeAttr("checked");
      },
      error: function(xhr, st, err) {
        logg.error("error in delete callback: ", err);
        $("actionbutton button").button("reset");
        return $("actionerror").text(err).show();
      }
    });
  };

  toggle_favorite_queries = function() {
    var ids;
    logg.info("called toggle_favorite_queries");
    ids = $.map($(".querycheck:checked"), function(el) {
      return el.id.substring(6);
    });
    logg.info("ids to toggle favorite state for: ", ids);
    if (!(ids != null)) {
      return;
    }
    $("actionbutton button").button("loading");
    logg.info("sending request to", that.toggle_favorite_queries_url);
    $.ajax({
      type: "POST",
      url: that.toggle_favorite_queries_url,
      data: {
        ids: ids
      },
      success: function(data, st, xhr) {
        window.location.reload();
        return $("checkbox_all").removeAttr("checked");
      },
      error: function(xhr, st, err) {
        logg.error("error in favorite callback: ", err);
        $("actionbutton button").button("reset");
        return $("actionerror").text(err).show();
      }
    });
  };

  /*-- READY --
  */


  $(function() {
    that = yamoda.queryhistory = yamoda.make_module(MODULE_NAME, {
      insert_query: insert_query,
      run_query: run_query,
      toggle_all_checkboxes: toggle_all_checkboxes,
      del_queries: del_queries,
      toggle_favorite_queries: toggle_favorite_queries,
      setup_datatable: setup_datatable
    });
    logg = that.logg;
    setup_datatable();
  });

}).call(this);
